package ua.petproject.annotations;

import ua.petproject.entity.Customer;

import java.lang.reflect.Field;

public class CreateEntityTables {
    public static void main(String[] args) {

        //declare request parts
        String sqlQueryBegining = "CREATE TABLE IF NOT EXISTS";
        String tableName = "";
        String sqlFieldsDeclaration = "";

        // get annotated class
        Class classElement = Customer.class;

        // check if there are @Entity and Table annotations
        boolean isEntityPresent = classElement.isAnnotationPresent(Entity.class);
        boolean isTablePresent = classElement.isAnnotationPresent(Table.class);

        if(isEntityPresent){

            // table name setting: check if table name is specified otherwise use class name
            if(isTablePresent && ((Table) classElement.getAnnotation(Table.class)).name() != null){
                tableName = ((Table) classElement.getAnnotation(Table.class)).name();
            } else {
                tableName = classElement.getSimpleName().toLowerCase();
            }

            // table fields setting
            Field[] declaredFields = classElement.getDeclaredFields();

            //iterating through fields to form the column names, types and other parameters
            for(int i = 0; i < declaredFields.length; i++){

                // checking on field annotations
                boolean isColumn = declaredFields[i].isAnnotationPresent(Column.class);
                boolean isAutoGeneratedValue = declaredFields[i].isAnnotationPresent(AutoGeneratedValue.class);
                boolean isId = declaredFields[i].isAnnotationPresent(Column.class);

                String columnName = "";
                String columnType = "";
                String autoGenerationFlag = "";
                String primaryKey = "";
                if(isColumn){
                    if(!declaredFields[i].getAnnotation(Column.class).name().equals("")){
                        columnName = declaredFields[i].getAnnotation(Column.class).name();
                    } else {
                        columnName = declaredFields[i].getName().toLowerCase();
                    }
                    columnType = declaredFields[i].getType().getSimpleName();
                }
                if(isAutoGeneratedValue){
                    autoGenerationFlag = " SERIAL";
                }
                if(isId){
                    primaryKey = " PRIMARY KEY";
                }

                // adding field to fields declaration string
                if(i == 0){
                    sqlFieldsDeclaration = sqlFieldsDeclaration + columnName + " " + columnType + autoGenerationFlag + primaryKey;
                } else {
                    sqlFieldsDeclaration = sqlFieldsDeclaration + ", " + columnName + " " + columnType + autoGenerationFlag + primaryKey;
                }
            }

            String sqlQuery = sqlQueryBegining + " " + tableName + " ( " + sqlFieldsDeclaration + " );";
            System.out.println(sqlQuery);
        }

    }
}
